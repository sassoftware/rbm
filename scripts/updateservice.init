#!/bin/bash
# chkconfig: 345 22 16
# description: manages the conary repository schema, either by stocking the \
# initial contents or simply upgrading the schema to match the current conary \
# version installed on the system
# 
# Copyright (c) 2006-2008 rPath, Inc
# All rights reserved

. /etc/sysconfig/pgsql/postgresql-updateservice

schema_python="/usr/bin/upsrv_schema.py"
pgsql_config="/etc/postgresql.conf.updateservice"
pgsql_config_target="$PGDATA/postgresql.conf"

function waitForPg()
{
  echo "Waiting for postgres startup to complete"
  ready="false"
  while [ "$ready" == "false" ]
  do
    psql -U postgres -p "$PGPORT" -l >/dev/null
    rc=$?
    if [ "$rc" -eq 0 ]
    then
      ready="true"
    elif [ "$rc" -eq 2 ]
    then
      sleep 4
    else
      echo "Failed waiting for Postgres"
      exit 1
    fi
  done
}

function createPgMigrateFile()
{
  if [ ! -d "/srv/conary/config" ]
  then
    mkdir /srv/conary/config
  fi
  echo "repositoryDB    postgresql updateservice@localhost.localdomain/updateservice" > /srv/conary/config/50_repositorydb.cnr
}

function createPgDb()
{
  createlang -U postgres plpgsql template1
  if [ "$?" -ne 0 -a  "$?" -ne 2 ]
  then
    echo "Failed enabling plpgsql"
    exit 1
  fi
  psql -U postgres -p "$PGPORT" -d postgres -c "CREATE ROLE updateservice NOSUPERUSER CREATEDB NOCREATEROLE INHERIT LOGIN;"
  if [ "$?" -ne 0 -a  "$?" -ne 1 ]
  then
    echo "Failed creating the updateservice role"
    exit 1
  fi
  psql -U updateservice -p "$PGPORT" -d postgres -c "CREATE DATABASE updateservice ENCODING 'UTF8';"
  if [ "$?" -ne 0  -a  "$?" -ne 1 ]
  then
    echo "Failed creating the postgres database"
    exit 1
  fi
}

function freshInstall()
{
  waitForPg
  createPgMigrateFile
  createPgDb
}

function prepForMigrate()
{
  waitForPg
  createPgDb
}

case "$1" in
start)
  if [ "`ps -A | grep httpd | grep -v lighttpd | grep -v grep`" != "" ]
  then
    echo "httpd is running. Please stop that service before running this script" > /dev/stderr
    exit 1
  fi

  # Adjust system max shared memory to at least 500MB
  SHMMAX=524288000
  if [ `sysctl -n kernel.shmmax` -lt $SHMMAX ]
  then
    sysctl -w "kernel.shmmax=$SHMMAX" -q
  fi

  # PostgreSQL must be running for initialization
  service postgresql-updateservice start

  # Copy our config file over the one generated during initialization
  # and restart PostgreSQL. The DB must already be initialized, or it
  # will fail to do so once the config is written, hence we still must
  # start it above.
  if ! diff "$pgsql_config" "$pgsql_config_target" >/dev/null
  then
    echo "Updating PostgreSQL configuration"
    waitForPg
    cp "$pgsql_config" "$pgsql_config_target"
    service postgresql-updateservice restart
  fi

  if [ ! -f "/srv/conary/sqldb" ]
  then
    freshInstall
  else
    prepForMigrate
  fi
  $schema_python
  ;;
stop)
  ;;
*)
  echo "Usage $0 {start | stop}"
  ;;
esac
