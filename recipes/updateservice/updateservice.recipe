#
# Copyright (c) SAS Institute Inc.
#


class UpdateServiceAppliance(PackageRecipe):
    name = 'updateservice'
    version = '8'

    buildRequires = [
        'conary-repository:python',
        'python-kid',
        'make',
        'python-devel',
        'python-pyramid:python',
        'python-pyramid_tm:python',
        'python-setuptools',
        'python-webob:python',
        'python-zope-sqlalchemy:python',
        'SQLAlchemy:python',
      ]

    Flags.ec2 = False

    def setup(r):
        r.addMercurialSnapshot()

        args = ''
        if Flags.ec2:
            args += ' EC2=1'
        r.Make(args)
        r.MakeInstall(args)
        r.PythonSetup()
        r.EggRequires(exceptions='.*')

        # Repository config files
        r.Transient('/srv/conary/repository.cnr')
        r.Create('/srv/conary/config/99_custom.cnr')
        r.InitialContents('/srv/conary/config/50_repositorydb.cnr')
        r.InitialContents('/srv/conary/config/99_custom.cnr')

        # Directories
        for dirname in ['tmp', 'contents', 'cscache', 'proxycontents']:
            path = '/srv/conary/' + dirname
            r.MakeDirs(path)
            r.ExcludeDirectories(exceptions=path)
            r.Ownership('apache', 'apache', path)
        r.Ownership('apache', 'apache',
            '/srv/rbuilder/tmp',
            '/var/log/rbuilder',
            '/var/log/rbuilder/repository.log',
            )
        r.InitialContents('/var/log/rbuilder/repository.log')

        r.CompilePython('%(libdir)s')

        # Postgres initscript (a symlink)
        r.DanglingSymlinks(exceptions='%(initdir)s/postgresql-updateservice')

        # Other requirements
        r.Requires('/usr/sbin/tmpwatch', '%(sysconfdir)s/cron.daily/mirror')
        r.Requires('/usr/sbin/logrotate', '%(sysconfdir)s/cron.daily/mirror')
        r.Requires('/opt/rmake3/sbin/gencert-rmake', '/usr/share/upsrv/scripts/preconfigure')

        # Appliance-specific components
        r.PackageSpec('%(name)s-appliance',
                # PostgreSQL configuration
                '/etc/cron.d/postgres',
                '/etc/postgresql.conf.updateservice',
                '/etc/init.d/postgresql-updateservice',
                '/etc/sysconfig/pgsql/postgresql-updateservice',
                # rmake
                '/etc/rmake3/',
                '/boot/',
                )
